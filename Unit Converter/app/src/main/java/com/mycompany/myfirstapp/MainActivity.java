package com.mycompany.myfirstapp;import android.content.Context;import android.support.v7.app.ActionBarActivity;import android.os.Bundle;import android.text.Editable;import android.text.Html;import android.text.TextWatcher;import android.view.Menu;import android.view.MenuItem;import android.view.View;import android.widget.AdapterView;import android.widget.ArrayAdapter;import android.widget.EditText;import android.widget.Spinner;import android.widget.TextView;public class MainActivity extends ActionBarActivity {    int x, y;    boolean greenLight;    float fahrenheit, inches, miles, gallons, pounds, input;    float celsius, centimeter, kilometer, liter, kilogram;    Spinner spinner1, spinner2;    EditText editTextInput, editTextOutput;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        spinner1 = (Spinner) findViewById(R.id.spinner1);        spinner2 = (Spinner) findViewById(R.id.spinner2);        editTextInput = (EditText) findViewById(R.id.edit_input);        editTextOutput = (EditText) findViewById(R.id.edit_output);        editTextInput.addTextChangedListener(iTextEditorWatcher);        editTextOutput.addTextChangedListener(oTextEditorWatcher);        ArrayAdapter<String> spinnerAdapter = new ArrayAdapter<>(this, android.R.layout.simple_spinner_dropdown_item,                getResources().getStringArray(R.array.units_array));        ArrayAdapter<String> spinnerAdapter2 = new ArrayAdapter<>(this, android.R.layout.simple_spinner_dropdown_item,                getResources().getStringArray(R.array.units_array2));        spinner1.setAdapter(spinnerAdapter);        spinner2.setAdapter(spinnerAdapter2);        spinner1.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {            @Override            public void onItemSelected(AdapterView<?> parent, View view,int pos, long id) {                spinner2.setSelection(pos);            }            @Override            public void onNothingSelected(AdapterView<?> parent) {            }        });        spinner2.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {            @Override            public void onItemSelected(AdapterView<?> parent, View view,int pos, long id) {                spinner1.setSelection(pos);            }            @Override            public void onNothingSelected(AdapterView<?> parent) {            }        });        editTextInput.setOnClickListener(new View.OnClickListener(){            @Override            public void onClick(View v){                greenLight = true;            }        });        editTextOutput.setOnFocusChangeListener(new View.OnFocusChangeListener() {            @Override            public void onFocusChange(View v, boolean hasFocus) {                if(hasFocus){                    greenLight = false;                } else {                    greenLight = true;                }            }        });    }    public final TextWatcher iTextEditorWatcher = new TextWatcher(){        @Override        public void beforeTextChanged(CharSequence s, int start, int count, int after)        {            if (editTextInput.length() == 0 && greenLight)                editTextOutput.getText().clear();        }        @Override        public void onTextChanged(CharSequence s, int start, int before, int count)        {            x = spinner1.getSelectedItemPosition();            y = spinner2.getSelectedItemPosition();            if (editTextInput.length() == 0 && greenLight) {                editTextOutput.getText().clear();            } else if(greenLight){                switch (x) {                    case 0: // Inches                        input = Float.parseFloat(editTextInput.getText().toString());                        inches = input * 0.39f;                        editTextOutput.setText(String.valueOf(inches), TextView.BufferType.EDITABLE);                        break;                    case 1: // Miles                        input = Float.parseFloat(editTextInput.getText().toString());                        miles = input * 0.62f;                        editTextOutput.setText(String.valueOf(miles), TextView.BufferType.EDITABLE);                        break;                    case 2: // Gallons                        input = Float.parseFloat(editTextInput.getText().toString());                        gallons = input * 0.26f;                        editTextOutput.setText(String.valueOf(gallons), TextView.BufferType.EDITABLE);                        break;                    case 3: // Pounds                        input = Float.parseFloat(editTextInput.getText().toString());                        pounds = input * 2.20f;                        editTextOutput.setText(String.valueOf(pounds), TextView.BufferType.EDITABLE);                        break;                    case 4: // Fahrenheit                        input = Float.parseFloat(editTextInput.getText().toString());                        fahrenheit = input * 1.8f + 32.0f;                        editTextOutput.setText(String.valueOf(fahrenheit), TextView.BufferType.EDITABLE);                        break;                    default:                        System.err.println("Conversion failed!");                        break;                }            }        }        @Override        public void afterTextChanged(Editable s)        {            greenLight = true;        }    };    public final TextWatcher oTextEditorWatcher = new TextWatcher(){        @Override        public void beforeTextChanged(CharSequence s, int start, int count, int after)        {            if (editTextOutput.length() == 0 && !greenLight)                editTextInput.getText().clear();        }        @Override        public void onTextChanged(CharSequence s, int start, int before, int count)        {            x = spinner1.getSelectedItemPosition();            y = spinner2.getSelectedItemPosition();            if (editTextOutput.length() == 0 && !greenLight) {                editTextInput.getText().clear();            } else if(!greenLight){                switch (x) {                    case 0: // Centimeter                        input = Float.parseFloat(editTextOutput.getText().toString());                        centimeter = input / 0.39f;                        editTextInput.setText(String.valueOf(centimeter), TextView.BufferType.EDITABLE);                        break;                    case 1: // Kilometer                        input = Float.parseFloat(editTextOutput.getText().toString());                        kilometer = input / 0.62f;                        editTextInput.setText(String.valueOf(kilometer), TextView.BufferType.EDITABLE);                        break;                    case 2: // Liter                        input = Float.parseFloat(editTextOutput.getText().toString());                        liter = input / 0.26f;                        editTextInput.setText(String.valueOf(liter), TextView.BufferType.EDITABLE);                        break;                    case 3: // Kilogram                        input = Float.parseFloat(editTextOutput.getText().toString());                        kilogram = input / 2.20f;                        editTextInput.setText(String.valueOf(kilogram), TextView.BufferType.EDITABLE);                        break;                    case 4: // Celsius                        input = Float.parseFloat(editTextOutput.getText().toString());                        celsius = (input - 32.0f) / 1.8f;                        editTextInput.setText(String.valueOf(celsius), TextView.BufferType.EDITABLE);                        break;                    default:                        System.err.println("Conversion failed!");                        break;                }            }        }        @Override        public void afterTextChanged(Editable s)        {            greenLight = false;        }    };    @Override    public boolean onCreateOptionsMenu(Menu menu) {        // Inflate the menu; this adds items to the action bar if it is present.        getMenuInflater().inflate(R.menu.menu_main, menu);        return true;    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        // Handle action bar item clicks here. The action bar will        // automatically handle clicks on the Home/Up button, so long        // as you specify a parent activity in AndroidManifest.xml.        int id = item.getItemId();        //noinspection SimplifiableIfStatement        if (id == R.id.action_settings) {            return true;        }        return super.onOptionsItemSelected(item);    }}